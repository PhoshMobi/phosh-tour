include:
 - project: 'guidog/meta-phosh'
   ref: '3629f479a3b1d37077137f05f988028c6e712378'
   file: '/ci/phosh-common-jobs.yml'
 - remote: 'https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/34039cd573a2df832d465bc9e4c5f543571f5241/templates/ci-fairy.yml'
 - remote: 'https://gitlab.gnome.org/GNOME/citemplates/raw/master/flatpak/flatpak_ci_initiative.yml'

stages:
 - build
 - test+docs
 - style-checks
 - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    # Don't trigger a branch pipeline if there is an open MR
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

default:
  # Protect CI infra from rogue jobs
  timeout: 15 minutes
  # Allow jobs to be caneled on new commits
  interruptible: true
  # Retry on infra hickups automatically
  retry:
    max: 1
    when:
      - 'api_failure'
      - 'runner_system_failure'
      - 'scheduler_failure'
      - 'stuck_or_timeout_failure'

variables:
  # For ci-fairy
  FDO_UPSTREAM_REPO: World/Phosh/phosh-tour
  DEBIAN_IMAGE: $CI_REGISTRY/world/phosh/stevia/debian:v0.0.2025-09-18
  COMMON_BUILD_OPTS: --werror
  GIT_SUBMODULE_STRATEGY: recursive

.trixie_vars: &trixie_vars
  variables:
    DIST: trixie
    BUILD_OPTS:  ${COMMON_BUILD_OPTS}

.build_step: &build_step
  script:
    - 'echo "Build opts: ${BUILD_OPTS}"'
    - meson ${BUILD_OPTS} . _build
    - meson compile -C _build

build:native-debian-trixie:
  stage: build
  image: ${DEBIAN_IMAGE}
  before_script:
    - apt-get -y update
    - apt-get -y build-dep .
  <<: *trixie_vars
  <<: *build_step
  artifacts:
    paths:
      - _build

flatpak:master:
    extends: '.flatpak'
    stage: 'build'
    variables:
        MANIFEST_PATH: "./build-aux/flatpak/mobi.phosh.PhoshTour.json"
        RUNTIME_REPO: "https://nightly.gnome.org/gnome-nightly.flatpakrepo"
        FLATPAK_MODULE: "phosh-tour"
        APP_ID: "mobi.phosh.PhoshTour.Devel"
        BUNDLE: "mobi.phosh.PhoshTour.Devel.flatpak"

check-po:
  stage: test+docs
  extends: .phosh-check-po

check-consistency:
  stage: test+docs
  extends: .phosh-check-consistency

# Sanity checks of MR settings and commit logs
sanity:
  extends:
    - .fdo.ci-fairy
  stage: style-checks
  variables:
    GIT_DEPTH: "100"
  needs: []
  script: |
    ci-fairy check-commits --junit-xml=commit-message-junit-report.xml
  artifacts:
    reports:
      junit: commit-message-junit-report.xml
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME'

format-check:
  stage: style-checks
  extends: .phosh-format-check
  allow_failure: true

check-markdown:
  stage: style-checks
  variables:
    PHOSH_MARKDOWN_PATHS: "*.md"
  extends:
    - .phosh-check-markdown

check-meson:
  stage: style-checks
  extends:
    - .phosh-check-meson
